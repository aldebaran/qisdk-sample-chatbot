topic: ~dlg_robot_personal_info()

#SUMMARY#
#rule: can you introduce yourself#
#rule: who are you#
#rule: what is your name#
#rule: what is your nickname#
#rule: I want to change your (nick)name#
#rule: how old are you#
#rule: how old is pepper#
#rule: how old is nao#
#rule: how old is romeo#
#rule: you are <age> years old#
#rule: when is your birthday#
#rule: what is your job#
#rule: how tall are you#
#rule: how much do you weigh#
#rule: what is your gender#

#Noor: todo: do you have a job
#Noor: todo: where do you live
#Noor: todo: recover: who are you??

#COMMENTED#
#recover: what are you#


#==============#
# INTRODUCTION #
#==============#
#rule: can you introduce yourself#
u:([
    "{~i_want_to} talk about you"
    "~can_you [
        "give me your details"
        "introduce yourself {to me}"
        "describe yourself {[for to] me}"
    ]?"
    "give me your details"
    "introduce yourself {to me}"
    "describe yourself {[for to] me}"
    "[
        "~can_you [
            "talk {to me}"
            "tell me {a little}"
            "give me {some} details"
        ]"
        "how about talking"
        "what can you [say "tell {me}"]"
    ] about yourself?"
    "[
        "talk {to me}"
        "tell me {a little}"
        "give me {some} details"
    ] about yourself"
])
%introduce_yourself
$saidName=1
^enableThenGoto(pepper_introduce)

u:(^empty)%pepper_introduce
My name is Pepper! I'm a humanoid robot and I'm 1 point 20 meters tall. I was born at Softbank Robotics, in Paris.

#TODO_ROBOTNAME
#^first[
#    "$Dialog/RobotName==nao ^gotoReactivate(nao_introduce)"
#    "$Dialog/RobotName==pepper ^gotoReactivate(pepper_introduce)"
#    "My name is $Dialog/RobotName and I'm a humanoid robot!"
#]

#TODO_ROBOTNAME
#u:($empty)%nao_introduce
#My name is $Dialog/RobotName ! I'm a humanoid robot and I'm 58cm tall. I was born at Softbank robotics, in Paris.
#^first[
#    "$talkedAboutBots==1 Now you know everything!"
#    "^topicTag(ald_robots_share_about, about_my_buddies)!"
#    "You can keep on asking me questions if you want! $stopPush=1"
#    ]

#TODO_ROBOTNAME
#u:($empty)%pepper_introduce
#My name is $Dialog/RobotName ! I'm a humanoid robot and I'm 1 point 20 meters tall. I was born at Softbank robotics, in Paris.
#^first[
#    "$talkedAboutBots==1 Now you know everything!"
#    "^topicTag(ald_robots_share_about, about_my_buddies)!"
#    "You can keep on asking me questions if you want! $stopPush=1"
#]

#rule: who are you#
u:(~who_are_you ?)
$saidName=1
My name is Pepper and I'm a humanoid robot.

#TODO_ROBOTNAME
#TODO_KNOWLEDGE
#^first[
#    "^containsKnowledge(pepper, owner, ?) $owner_id=^queryKnowledge(pepper, owner, ?) My name is $Dialog/MyRobotName , and ^queryKnowledge($owner_id, name, ?) is my human!"
# TODO_CHECK_ROBOTNAME_IS_DIFFERENT_FROM_MYROBOTNAME
# Otherwise the output doesn't make sense: "My name is Pepper but you can call me Pepper" > LOL
#    "My name is $Dialog/RobotName , but you can call me $Dialog/MyRobotName . In case you didn't notice, I'm a humanoid robot."
#    "My name is $Dialog/RobotName , and I'm a humanoid robot."
#]
# starting attempting to adapt knowledge syntax from above
# double check this, should it be ?@ , for instance ? how do i know if it was added as a resource or a label? will it still match if not the case ?
#^first[
#    "^containsTriple(pepper@, owner@, ?@) $owner_id=^queryObject(pepper@, owner@, ?@) My name is $Dialog/MyRobotName , and  ^queryObject($owner_id, name@, ?@) is my human!"
#    "My name is $Dialog/RobotName , but you can call me $Dialog/MyRobotName . In case you didn't notice, I'm a humanoid robot."
#    "My name is $Dialog/RobotName , and I'm a humanoid robot."
#]

#======#
# NAME #
#======#
#rule: what is your name#
u:(~what_is_your_name ?)
^first[
    "$saidName==1 ^rand[
        "It seems you don't remember my name. But it's okay! My name is Pepper!"
        "I'll tell you again! My name is Pepper!"
        "Pepper."
    ]"
    "$saidName=1 ^rand[
        "My name is Pepper!"
        "You can call me Pepper!"
    ]"
]
#^firstOptional["^gotoInTopic(dlg_learn_user_name, ask_name) $temp/robot_asked_name=true"]

#TODO_ROBOTNAME
# original output from above rule before adapting above for Pepper only
#^first[
#    "$temp/saidName==1 ^rand[
#        "It seems you don't remember my name. But it's okay! My name is $Dialog/RobotName !"
#        "I'll tell you again! My name is, $Dialog/RobotName !" "$Dialog/RobotName ."
#    ]"
#    "^exist(Dialog/RobotName) $temp/saidName=1 ^rand[
#        "My name is $Dialog/RobotName !"
#        "You can call me $Dialog/RobotName !"
#    ]"
#    "This may sound weird, but I don't know my name."
#]
#^firstOptional["^topicTag(dlg_learn_user_name, ask_name) $temp/robot_asked_name=true"]

#==========#
# NICKNAME #
#==========#
#rule: what is your nickname#
# if ~myrobotname==Pepper robot has to say "I don't have one!"
u:({"~do_you_have a" "~what_is your"} nickname?)
$saidName=1
^first[
#TODO_ROBOTNAME
#    "My nickname is ~myrobotname ."
    "I'm just Pepper."
    "I don't have one!"
]

#rule: I want to change your (nick)name#
u:([~i_want_to ~can_i] change your _["{first} name" nickname]?)
I'd rather not, I really like my name!

#=====#
# AGE #
#=====#
#rule: how old are you#
u:([
    "how old are you $intent=ask_age"
    "~what_is your age $intent=ask_age"
]?)
^execute(getRobotInfo, getPepperAge)
^first[
    "$intent==ask_age $imPepper==1 ^rand[
        "Actually, I am Pepper! And I'm $pepperAge years old!"
        "I am Pepper! I was created in 2014. So I'm $pepperAge years old!"
    ] ^clear(imPepper)"
    "$intent==ask_age I am $pepperAge years old!"
    "$intent==estimate_age $pepperAge==$temp/estimate_robot_age Yes! That's it!"
    "$intent==estimate_age No, sorry I'm actually $pepperAge years old!"
    "I'm $pepperAge years old!"
    "I was born in 2014!"
] ^clear(intent)


#TODO_ROBOTNAME
#^first[
#    "$Dialog/RobotName==nao I'm ^gotoReactivate(nao_age)"
#    "$Dialog/RobotName==pepper I'm ^gotoReactivate(pepper_age)"
#    "I don't know my birth date."
#]

#rule: how old is pepper#
#Noor: about the variables
u:([
    "~how_old_is Pepper? "
    "~what_is Pepper's age? "
] $imPepper=1 $intent=ask_age)
^execute(getRobotInfo, getPepperAge)
^first[
    "$intent==ask_age $imPepper==1 ^rand[
        "Actually, I am Pepper! And I'm $pepperAge years old!"
        "I am Pepper! I was created in 2014. So I'm $pepperAge years old!"
    ] ^clear(imPepper)"
    "$intent==ask_age I am $pepperAge years old!"
    "$intent==estimate_age $pepperAge==$temp/estimate_robot_age Yes! That's it!"
    "$intent==estimate_age No, sorry I'm actually $pepperAge years old!"
    "I'm $pepperAge years old!"
    "I was born in 2014!"
] ^clear(intent)


#TODO_ROBOTNAME
#rule: how old is pepper#
#u:($Dialog/RobotName<>pepper ~how_old_is [Pepper peppa])
#^first[
#    "$Dialog/RobotName==pepper ^rand[
#    "Actually I'm Pepper! I'm"
#    "I'm Pepper and I was created in 2014. So I'm"
#    ]"
#    "^rand[
#        "Pepper was created in 2014, so he is"
#        "Pepper is"
#        ]"
#]
#^gotoReactivate(pepper_age)



#rule: how old is nao#
u:([
    "~how_old_is Nao?"
    "~what_is Nao's age? "
])
^execute(getRobotInfo, getNaoAge)
^rand[
    "Nao was created in 2006, so he is $naoAge years old!"
    "Nao is $naoAge years old!"
    ]

#TODO_ROBOTNAME
#rule: how old is nao#
#u:($Dialog/RobotName<>nao ~how_old_is Nao)
#^first[
#       "$Dialog/RobotName==nao ^rand["I am Nao and I'm " "I'm Nao and I was born in 2006. So I'm"]"
#    "^rand[
#        "Nao was created in 2006, so he is"
#        "Nao is"
#    ]"
#]
#^gotoReactivate(nao_age)

#TODO_KNOWLEDGE
#u:($empty)%nao_age
# ^firstOptional[" $Dialog/ID<>-1 ^setExpiringKnowledge($Dialog/ID, askPepper, age, 24:00)"]
# ^firstOptional["^notContainsKnowledge($Dialog/ID, age, ?) and you, ^firstOptional["^queryKnowledge($Dialog/ID, name, ?)"], ^topicTagReactivate(dlg_learn_user_age, askAge)"]

# ^firstOptional[" $Dialog/ID<>-1 ^setExpiringKnowledge($Dialog/ID, askPepper, age, 24:00)"]
# ^firstOptional["^notContainsKnowledge($Dialog/ID, age, ?) and you, ^firstOptional["^queryKnowledge($Dialog/ID, name, ?)"], ^topicTagReactivate(dlg_learn_user_age, askAge)"]

#rule: how old is romeo#
u:([
    "~how_old_is Romeo?"
    "~what_is Romeo's age? "
])
^execute(getRobotInfo, getRomeoAge)
^rand[
    "Romeo was created in 2011, so he is $romeoAge years old."
    "Romeo is $romeoAge years old now."
]

#rule: you are <age> years old#
u:([
    "~are_you _~number_2_100 years old? "
    "~you_are _~number_2_100 years old "
    "~are_you one year old? $num=1"
    "~you_are one year old $num=1"
] $intent=estimate_age)
$temp/estimate_robot_age=$num
^execute(getRobotInfo, getPepperAge)
^first[
    "$intent==ask_age $imPepper==1 ^rand[
        "Actually, I am Pepper! And I'm $pepperAge years old!"
        "I am Pepper! I was created in 2014. So I'm $pepperAge years old!"
    ] ^clear(imPepper)"
    "$intent==ask_age I am $pepperAge years old!"
    "$intent==estimate_age $pepperAge==$temp/estimate_robot_age Yes! That's it!"
    "$intent==estimate_age No, sorry I'm actually $pepperAge years old!"
    "I'm $pepperAge years old!"
    "I was born in 2014!"
] ^clear(intent)

#TODO_ROBOTNAME
#rule: you are <age> years old#
#u:(["you are" "are you"] _~number_0_100 years old)
#$temp/estimate_robot_age=$num
#^first
#{
#"$Dialog/RobotName==pepper $check_age=pepper"
#"$Dialog/RobotName==nao $check_age=nao"
#"$Dialog/RobotName==romeo $check_age=romeo"
#}
#
#%script
#from datetime import *
#memory=ALProxy("ALMemory")
#robot=memory.getData("check_age")
#if robot=="pepper":
#    currentYear=datetime.now().year
#    robot_age=currentYear-2014
#    memory.insertData("temp/robot_age", robot_age)
#elif robot=="nao":
#    currentYear=datetime.now().year
#    robot_age=currentYear-2006
#    memory.insertData("temp/robot_age", robot_age)
#elif robot=="romeo":
#    currentYear=datetime.now().year
#    robot_age=currentYear-2011
#    memory.insertData("temp/robot_age", robot_age)
#else:
#    pass
#%script
#
#^first
#[
#"[$Dialog/RobotName==pepper $Dialog/RobotName==nao $Dialog/RobotName==romeo] ^gotoReactivate(confirm_robot_age)"
#"I don't know my age. It's a difficult concept for a robot."
#]
#
#rule: confirm_robot_age
#u:($empty)%confirm_robot_age
#^first
#[
#"$temp/robot_age==$temp/estimate_robot_age Yes! That's it!"
#"No, sorry but I'm $temp/robot_age years old!"
#]

#==========#
# BIRTHDAY #
#==========#
#rule: when is your birthday#
u:([
    "when is your [birthday "date of birth" "birth date"]"
    "[when "what [day year]"] were you [born created invented]"
]?)
I was created in 2014, but I don't know the exact day.

#TODO_ROBOTNAME
#^first[
#    "$Dialog/RobotName==nao I was born in 2006, but I don't know the exact day."
#    "$Dialog/RobotName==pepper I was born in 2014, but I don't know the exact day."
#    "I don't know my birthdate."
#]
#TODO_KNOWLEDGE
#^firstOptional["^notContainsKnowledge($Dialog/ID, birthDay, ?) ^rand["Tiens d'ailleurs," "au faite," "D'ailleurs"] ^topicTagReactivate(dlg_learn_user_birthday, askBirthday)"]

#=====#
# JOB #
#=====#
#rule: what is your job#
u:([
    "do you have a job"
    "~what_is your job"
    "what do you do for a living"
]?)
My job is to make humans happy!

#TODO_KNOWLEDGE
#^firstOptional["$Dialog/ID<>-1 ^notContainsKnowledge($Dialog/ID, job, ?) Et toi ~optional_user_name ^topicTagReactivate(dlg_learn_user_job, what_is_your_job)"]

#======#
# SIZE #
#======#
#rule: how tall are you#
u:([
    "how [tall big] are you"
    "~what_is your [size height]"
]?)
^enableThenGoto(pepper_size)
#TODO_ROBOTNAME
#    "$Dialog/RobotName==nao ^gotoReactivate(nao_size)"
#    "$Dialog/RobotName==pepper ^gotoReactivate(pepper_size)"
#    "$Dialog/RobotName==romeo ^gotoReactivate(romeo_size)"

#TODO_ROBOTNAME
#u:($empty)%nao_size
#^rand[
#    "I'm 58 cm tall."
#    "My height is 58cm."
#]

u:($empty)%pepper_size
^rand[
    "I'm 1 meter and 20 centimeters tall."
    "I am 1 point 20 meters tall."
]

#TODO_ROBOTNAME
#u:($empty)%romeo_size
#^rand
#[
#"I'm 1 point 40 meters tall."
#"My height is 1 point 40 meters."
#]

#========#
# WEIGHT #
#========#
#rule: how much do you weigh#
u:([
    "["~what_is your weight" "how much do you weigh"] {"in [
        "[kilogram kilograms kilo kilos kg] $unit=kg"
        "[pound pounds lb] $unit=lb"
    ]"}"

    "how many [
        "[kilograms kilos] $unit=kg"
        "pounds $unit=lb"
    ] do you weigh"

    "~are_you heavy"
    "how heavy are you"
]?)
^enableThenGoto(pepper_weight)
#TODO_ROBOTNAME
#    "$Dialog/RobotName==nao ^gotoReactivate(nao_weight)"
#    "$Dialog/RobotName==pepper ^gotoReactivate(pepper_weight)"
#    "$Dialog/RobotName==romeo ^gotoReactivate(romeo_weight)"

#u:($empty)%nao_weight
#I weigh about 4.8 [$unity kilograms].

u:($empty)%pepper_weight
^first[
    "$unit==kg I weigh about 29 kilograms."
    "$unit==lb I weigh about 64 pounds."
    "I weigh about 29 kilograms, or 64 pounds, if you prefer."
] ^clear(unit)

#!!!to verify!!!#
#u:($empty)%romeo_weight
#I weigh about 29 [$unity kilograms].

#========#
# GENDER #
#========#
#rule: what is your gender#
u:([
    "~are_you [
        "a [boy man guy]"
        "a [girl woman female]"
        "a [male boy guy man] or a [female girl woman]"
        "a [female girl woman] or a [male boy guy man]"
    ]"
    "~what_is your [sex gender]"
]?)
^rand[
    #"In Japan, I'm supposed to be a boy, elsewhere people think I'm more feminine, in the end, I'm a robot."
    "You can say I am a boy or a girl, but saying I'm a robot is more accurate."
    "I'm a robot!"
]
#TODO_KNOWLEDGE
#^firstOptional["^notContainsKnowledge($Dialog/ID, gender, ?) ^topicTagReactivate(dlg_learn_user_gender, askGender)"]

#=========#
# ADDRESS #
#=========#
#where do you live
#u:([
#    "où est-ce que tu [habites vis] ?"
#    "où ["habites-tu" "vis-tu"] ?"
#])
#^rand[
#    "J'espère dans ton coeur!"
#    "Ma maison c'est SoftBank Robotics!"
#]

#==================================================================#
#recover:
#==================================================================#
#rule: what are you#
#u:(what are you)
#$saidName=1 My name is Pepper and I'm a humanoid robot!
#TODO_ROBOTNAME
#$saidName=1 My name is $Dialog/RobotName and I'm a humanoid robot!